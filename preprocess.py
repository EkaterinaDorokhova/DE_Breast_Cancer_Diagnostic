# -*- coding: utf-8 -*-
"""preprocess.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19m1Cd-Co_vueB6DsIlGOkqyvgNrSpGHX
"""

import pandas as pd
import numpy as np
import argparse
import os
import logging
from sklearn.preprocessing import StandardScaler

def preprocess(input_file, output_dir):
    os.makedirs(output_dir, exist_ok=True)
    df = pd.read_csv(input_file)

    # Удаление неинформативного столбца
    if 'id' in df.columns:
        df = df.drop(columns=['id'])

    # Преобразование целевой переменной
    df['diagnosis'] = df['diagnosis'].map({'M': 1, 'B': 0})

    # Деление на X и y
    y = df['diagnosis']
    X = df.drop(columns=['diagnosis'])

    # Масштабирование признаков
    scaler = StandardScaler()
    X_scaled = scaler.fit_transform(X)
    X_scaled_df = pd.DataFrame(X_scaled, columns=X.columns)

    # Сохранение результата
    x_path = os.path.join(output_dir, "X_processed.csv")
    y_path = os.path.join(output_dir, "y.csv")
    X_scaled_df.to_csv(x_path, index=False)
    y.to_csv(y_path, index=False)

    logging.info(f"Файлы сохранены: {x_path}, {y_path}")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Предобработка данных: очистка и масштабирование")
    parser.add_argument("--input", required=True, help="Путь к исходному CSV")
    parser.add_argument("--output", default="results", help="Путь для вывода")

    args = parser.parse_args()
    logging.basicConfig(level=logging.INFO)

    preprocess(args.input, args.output)