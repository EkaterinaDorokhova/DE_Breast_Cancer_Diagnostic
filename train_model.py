# -*- coding: utf-8 -*-
"""train_model.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JoTdC7xrZV9GEUfUyn8Gkj4vnyPOR22j
"""

import pandas as pd
import argparse
import os
import logging
import joblib
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression

def train_model(x_path, y_path, output_dir):
    os.makedirs(output_dir, exist_ok=True)

    # Загрузка данных
    X = pd.read_csv(x_path)
    y = pd.read_csv(y_path).squeeze()  # y — Series

    # Разделение на обучающую и тестовую выборки
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    # Обучение модели
    model = LogisticRegression(max_iter=1000)
    model.fit(X_train, y_train)

    # Сохранение модели
    model_path = os.path.join(output_dir, "model.pkl")
    joblib.dump(model, model_path)
    logging.info(f"Модель сохранена в: {model_path}")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Обучение модели логистической регрессии")
    parser.add_argument("--x", required=True, help="Путь к X_processed.csv")
    parser.add_argument("--y", required=True, help="Путь к y.csv")
    parser.add_argument("--output", default="results", help="Путь для сохранения модели")

    args = parser.parse_args()
    logging.basicConfig(level=logging.INFO)

    train_model(args.x, args.y, args.output)